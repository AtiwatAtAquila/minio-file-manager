// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/providers/database/generated"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model File {
    id            String            @id @default(uuid()) @db.Uuid
    filename      String            @db.VarChar(255)
    filetype      String            @db.VarChar(100)
    fileSize      BigInt            @db.BigInt
    minioKey      String            @unique @db.VarChar(500)
    uploadStatus  FileUploadStatus  @default(PENDING)
    uploadedAt    DateTime          @default(now()) @db.Timestamp(6)
    updatedAt     DateTime          @updatedAt @db.Timestamp(6)
    
    permissions   FileRolePermission[]
    
    @@index([filename])
    @@index([uploadedAt])
    @@index([uploadStatus])
    @@map("files")
}

model Role {
    id              String              @id @default(uuid()) @db.Uuid
    name            String              @unique @db.VarChar(50)
    createdAt       DateTime            @default(now()) @db.Timestamp(6)
    updatedAt       DateTime            @updatedAt @db.Timestamp(6)
    
    filePermissions FileRolePermission[]
    
    @@index([name])
    @@map("roles")
}

model FileRolePermission {
    fileId    String   @db.Uuid
    roleName  String   @db.VarChar(50)
    grantedAt DateTime @default(now()) @db.Timestamp(6)
    grantedBy String   @db.VarChar(100)
    
    file      File     @relation(fields: [fileId], references: [id], onDelete: Cascade)
    role      Role     @relation(fields: [roleName], references: [name], onDelete: Cascade)
    
    @@id([fileId, roleName])
    @@index([roleName])
    @@index([grantedAt])
    @@index([grantedBy])
    @@map("file_role_permissions")
}

enum FileUploadStatus {
    PENDING
    COMPLETED
    FAILED
}
